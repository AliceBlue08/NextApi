# common
.main-master: &main-master "master@development/common/abitech.nextapi"
.dotnet-job: &dotnet-job
  image: mcr.microsoft.com/dotnet/core/sdk:3.1
  tags:
    - docker

.docker-job: &docker-job
  image: hub.abitech.kz/docker:latest
  tags:
    - docker

.docker: &docker
  tags:
    - docker

.dotnet-restore: &dotnet-restore "dotnet restore -v q --configfile ../../NuGet.config"

.dotnet-test: &dotnet-test
  stage: test
  <<: *dotnet-job
  only:
    - merge_requests
  script:
    - cd $project
    - *dotnet-restore
    - dotnet test -v n

.nugetize: &nugetize
  stage: deploy
  when: manual
  only:
    - *main-master
  <<: *dotnet-job
  script:
    - cd $projectFolder
    - dotnet pack -p:Version=$VERSION
    - dotnet nuget push "bin/Debug/$projectName.$VERSION.nupkg" -k $NugetApiKey  -s $NugetSource

.update-swarm-stack: &update-swarm-stack
  stage: deploy
  tags:
    - docker
  image: hub.abitech.kz/binali/portainerctl
  script:
    - 'portainerctl auth 
    --url $portainerUrl 
    --user $portainerUser 
    --password $portainerPassword'
    - 'portainerctl stack update 
    -e "VERSION=$VERSION" $stackName'
  environment:
    name: $stackName
    url: http://$host

# declaration
variables:
  VERSION: "2.0.$CI_PIPELINE_IID"
  BASE_DOC_DOCKER_IMAGE: abitech/nextapi-docs

stages:
  - test
  - build
  - deploy

# tests
test-server:
  <<: *dotnet-test
  variables:
    project: test/Abitech.NextApi.Server.Tests
    NEXTAPI_TESTDB_PORT: "3306"
    NEXTAPI_TESTDB_HOST: "blade1.abitech.kz"
test-server-efcore:
  <<: *dotnet-test
  variables:
    project: test/Abitech.NextApi.Server.EfCore.Tests
test-client-di:
  <<: *dotnet-test
  variables:
    project: test/Abitech.NextApi.Client.Tests

# build / documentation
docs-dockerize:
  <<: *docker-job
  stage: build
  when: manual
  image: hub.abitech.kz/docker
  script:
    - docker build -f DocDockerfile -t registry.abitech.kz/$BASE_DOC_DOCKER_IMAGE:$VERSION .
    - docker login registry.abitech.kz -u $DockerUser -p $DockerPassword
    - docker push registry.abitech.kz/$BASE_DOC_DOCKER_IMAGE:$VERSION
    - docker rmi registry.abitech.kz/$BASE_DOC_DOCKER_IMAGE:$VERSION
#  only:
#    - *main-master

# deploy
nugetize-testing:
  <<: *nugetize
  variables:
    projectFolder: src/base/Abitech.NextApi.Testing
    projectName: Abitech.NextApi.Testing
nugetize-common:
  <<: *nugetize
  variables:
    projectFolder: src/base/Abitech.NextApi.Common
    projectName: Abitech.NextApi.Common
nugetize-common-server:
  <<: *nugetize
  variables:
    projectFolder: src/base/Abitech.NextApi.Server.Common
    projectName: Abitech.NextApi.Server.Common
nugetize-common-uploadqueue:
  <<: *nugetize
  variables:
    projectFolder: src/base/Abitech.NextApi.UploadQueue.Common
    projectName: Abitech.NextApi.UploadQueue.Common
nugetize-client:
  <<: *nugetize
  variables:
    projectFolder: src/client/Abitech.NextApi.Client
    projectName: Abitech.NextApi.Client
nugetize-client-uploadqueue:
  <<: *nugetize
  variables:
    projectFolder: src/client/Abitech.NextApi.Client.UploadQueue
    projectName: Abitech.NextApi.Client.UploadQueue
nugetize-client-autofac:
  <<: *nugetize
  variables:
    projectFolder: src/client/Abitech.NextApi.Client.Autofac
    projectName: Abitech.NextApi.Client.Autofac
nugetize-client-microsoft-di:
  <<: *nugetize
  variables:
    projectFolder: src/client/Abitech.NextApi.Client.MicrosoftDI
    projectName: Abitech.NextApi.Client.MicrosoftDI
nugetize-server:
  <<: *nugetize
  variables:
    projectFolder: src/server/Abitech.NextApi.Server
    projectName: Abitech.NextApi.Server
nugetize-server-efcore:
  <<: *nugetize
  variables:
    projectFolder: src/server/Abitech.NextApi.Server.EfCore
    projectName: Abitech.NextApi.Server.EfCore
nugetize-server-uploadqueue:
  <<: *nugetize
  variables:
    projectFolder: src/server/Abitech.NextApi.Server.UploadQueue
    projectName: Abitech.NextApi.Server.UploadQueue

# deploy / documentation
docs-release:
  <<: *update-swarm-stack
  dependencies:
    - 'docs-dockerize'
  variables:
    portainerUrl: $PortainerUrl
    portainerUser: $PortainerUser
    portainerPassword: $PortainerPassword
    stackName: nextapi-docs
    host: nextapi.abitech.kz
#  only:
#    - *main-master


